/**
 * Form Elements
 */

//<button>	The HTML <button> Element represents a clickable button.
button {

}

//<datalist>	The HTML Datalist Element (<datalist>) contains a set of <option> elements that represent the values available for other controls.
datalist {

}

//<fieldset>	The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.
fieldset {

}

//<form>	The HTML <form> element represents a document section that contains interactive controls to submit information to a web server.
form {

}

//<input>	The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user. The semantics of an <input> varies considerably depending on the value of its type attribute.
input {

}

//<keygen>	The HTML <keygen> element exists to facilitate generation of key material, and submission of the public key as part of an HTML form. This mechanism is designed for use with Web-based certificate management systems. It is expected that the <keygen> element will be used in an HTML form along with other information needed to construct a certificate request, and that the result of the process will be a signed certificate.
keygen {

}

// <label>	The HTML Label Element (<label>) represents a caption for an item in a user interface. It can be associated with a control either by placing the control element inside the <label> element, or by using the for attribute. Such a control is called the labeled control of the label element.
label
{

}

// <legend>	The HTML <legend> Element (or HTML Legend Field Element) represents a caption for the content of its parent <fieldset>.
legend {

}

//<meter>	The HTML <meter> Element represents either a scalar value within a known range or a fractional value.
meter {

}

//<optgroup>	In a Web form, the HTML <optgroup> element  creates a grouping of options within a <select> element.
optgroup {

}

//<option>	In a Web form, the HTML <option> element is used to create a control representing an item within a <select>, an <optgroup> or a <datalist> HTML5 element.
option {

}

//<output>	The HTML <output> element represents the result of a calculation or user action.
output {

}

//<progress>	The HTML <progress> Element is used to view the completion progress of a task. While the specifics of how it's displayed is left up to the browser developer, it's typically displayed as a progress bar. Javascript can be used to manipulate the value of progress bar.
progress {

}

// Select element represents a control that presents a menu of options. 
// The options within the menu are represented by <option> elements, 
// which can be grouped by <optgroup> elements. Options can be pre-selected for the user.
select {

}

// Textarea element represents a multi-line plain-text editing control.
textarea {

}
